diff --git a/src/main/java/org/opennms/core/ipc/grpc/common/OpenNMSIpcGrpc.java b/src/main/java/org/opennms/core/ipc/grpc/common/OpenNMSIpcGrpc.java
index 370bcb3..0e5b32f 100644
--- a/src/main/java/org/opennms/core/ipc/grpc/common/OpenNMSIpcGrpc.java
+++ b/src/main/java/org/opennms/core/ipc/grpc/common/OpenNMSIpcGrpc.java
@@ -29,12 +29,12 @@
 package org.opennms.core.ipc.grpc.common;
 
 import static io.grpc.MethodDescriptor.generateFullMethodName;
+import static io.grpc.stub.ClientCalls.asyncBidiStreamingCall;
+import static io.grpc.stub.ClientCalls.asyncClientStreamingCall;
 import static io.grpc.stub.ServerCalls.asyncBidiStreamingCall;
 import static io.grpc.stub.ServerCalls.asyncClientStreamingCall;
 import static io.grpc.stub.ServerCalls.asyncUnimplementedStreamingCall;
 
-import io.grpc.stub.ClientCalls;
-
 /**
  * <pre>
  * service definitions of IPC between Minion and OpenNMS
@@ -210,7 +210,7 @@ public final class OpenNMSIpcGrpc {
      */
     public io.grpc.stub.StreamObserver<RpcResponseProto> rpcStreaming(
         io.grpc.stub.StreamObserver<RpcRequestProto> responseObserver) {
-      return ClientCalls.asyncBidiStreamingCall(
+      return asyncBidiStreamingCall(
           getChannel().newCall(getRpcStreamingMethod(), getCallOptions()), responseObserver);
     }
 
@@ -221,7 +221,7 @@ public final class OpenNMSIpcGrpc {
      */
     public io.grpc.stub.StreamObserver<SinkMessage> sinkStreaming(
         io.grpc.stub.StreamObserver<Empty> responseObserver) {
-      return ClientCalls.asyncClientStreamingCall(
+      return asyncClientStreamingCall(
           getChannel().newCall(getSinkStreamingMethod(), getCallOptions()), responseObserver);
     }
   }
diff --git a/src/main/java/org/opennms/core/ipc/grpc/common/SinkMessage.java b/src/main/java/org/opennms/core/ipc/grpc/common/SinkMessage.java
index 587b2b7..988f836 100644
--- a/src/main/java/org/opennms/core/ipc/grpc/common/SinkMessage.java
+++ b/src/main/java/org/opennms/core/ipc/grpc/common/SinkMessage.java
@@ -46,6 +46,7 @@ private static final long serialVersionUID = 0L;
   private SinkMessage() {
     messageId_ = "";
     content_ = com.google.protobuf.ByteString.EMPTY;
+    systemId_ = "";
     location_ = "";
     moduleId_ = "";
   }
@@ -95,16 +96,22 @@ private static final long serialVersionUID = 0L;
           case 26: {
             String s = input.readStringRequireUtf8();
 
-            location_ = s;
+            systemId_ = s;
             break;
           }
           case 34: {
             String s = input.readStringRequireUtf8();
 
-            moduleId_ = s;
+            location_ = s;
             break;
           }
           case 42: {
+            String s = input.readStringRequireUtf8();
+
+            moduleId_ = s;
+            break;
+          }
+          case 50: {
             if (!((mutable_bitField0_ & 0x00000001) != 0)) {
               tracingInfo_ = com.google.protobuf.MapField.newMapField(
                   TracingInfoDefaultEntryHolder.defaultEntry);
@@ -146,7 +153,7 @@ private static final long serialVersionUID = 0L;
   protected com.google.protobuf.MapField internalGetMapField(
       int number) {
     switch (number) {
-      case 5:
+      case 6:
         return internalGetTracingInfo();
       default:
         throw new RuntimeException(
@@ -207,10 +214,46 @@ private static final long serialVersionUID = 0L;
     return content_;
   }
 
-  public static final int LOCATION_FIELD_NUMBER = 3;
+  public static final int SYSTEM_ID_FIELD_NUMBER = 3;
+  private volatile Object systemId_;
+  /**
+   * <code>string system_id = 3;</code>
+   * @return The systemId.
+   */
+  public String getSystemId() {
+    Object ref = systemId_;
+    if (ref instanceof String) {
+      return (String) ref;
+    } else {
+      com.google.protobuf.ByteString bs = 
+          (com.google.protobuf.ByteString) ref;
+      String s = bs.toStringUtf8();
+      systemId_ = s;
+      return s;
+    }
+  }
+  /**
+   * <code>string system_id = 3;</code>
+   * @return The bytes for systemId.
+   */
+  public com.google.protobuf.ByteString
+      getSystemIdBytes() {
+    Object ref = systemId_;
+    if (ref instanceof String) {
+      com.google.protobuf.ByteString b = 
+          com.google.protobuf.ByteString.copyFromUtf8(
+              (String) ref);
+      systemId_ = b;
+      return b;
+    } else {
+      return (com.google.protobuf.ByteString) ref;
+    }
+  }
+
+  public static final int LOCATION_FIELD_NUMBER = 4;
   private volatile Object location_;
   /**
-   * <code>string location = 3;</code>
+   * <code>string location = 4;</code>
    * @return The location.
    */
   public String getLocation() {
@@ -226,7 +269,7 @@ private static final long serialVersionUID = 0L;
     }
   }
   /**
-   * <code>string location = 3;</code>
+   * <code>string location = 4;</code>
    * @return The bytes for location.
    */
   public com.google.protobuf.ByteString
@@ -243,10 +286,10 @@ private static final long serialVersionUID = 0L;
     }
   }
 
-  public static final int MODULE_ID_FIELD_NUMBER = 4;
+  public static final int MODULE_ID_FIELD_NUMBER = 5;
   private volatile Object moduleId_;
   /**
-   * <code>string module_id = 4;</code>
+   * <code>string module_id = 5;</code>
    * @return The moduleId.
    */
   public String getModuleId() {
@@ -262,7 +305,7 @@ private static final long serialVersionUID = 0L;
     }
   }
   /**
-   * <code>string module_id = 4;</code>
+   * <code>string module_id = 5;</code>
    * @return The bytes for moduleId.
    */
   public com.google.protobuf.ByteString
@@ -279,7 +322,7 @@ private static final long serialVersionUID = 0L;
     }
   }
 
-  public static final int TRACING_INFO_FIELD_NUMBER = 5;
+  public static final int TRACING_INFO_FIELD_NUMBER = 6;
   private static final class TracingInfoDefaultEntryHolder {
     static final com.google.protobuf.MapEntry<
         String, String> defaultEntry =
@@ -306,7 +349,7 @@ private static final long serialVersionUID = 0L;
     return internalGetTracingInfo().getMap().size();
   }
   /**
-   * <code>map&lt;string, string&gt; tracing_info = 5;</code>
+   * <code>map&lt;string, string&gt; tracing_info = 6;</code>
    */
 
   public boolean containsTracingInfo(
@@ -322,14 +365,14 @@ private static final long serialVersionUID = 0L;
     return getTracingInfoMap();
   }
   /**
-   * <code>map&lt;string, string&gt; tracing_info = 5;</code>
+   * <code>map&lt;string, string&gt; tracing_info = 6;</code>
    */
 
   public java.util.Map<String, String> getTracingInfoMap() {
     return internalGetTracingInfo().getMap();
   }
   /**
-   * <code>map&lt;string, string&gt; tracing_info = 5;</code>
+   * <code>map&lt;string, string&gt; tracing_info = 6;</code>
    */
 
   public String getTracingInfoOrDefault(
@@ -341,7 +384,7 @@ private static final long serialVersionUID = 0L;
     return map.containsKey(key) ? map.get(key) : defaultValue;
   }
   /**
-   * <code>map&lt;string, string&gt; tracing_info = 5;</code>
+   * <code>map&lt;string, string&gt; tracing_info = 6;</code>
    */
 
   public String getTracingInfoOrThrow(
@@ -375,18 +418,21 @@ private static final long serialVersionUID = 0L;
     if (!content_.isEmpty()) {
       output.writeBytes(2, content_);
     }
+    if (!getSystemIdBytes().isEmpty()) {
+      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, systemId_);
+    }
     if (!getLocationBytes().isEmpty()) {
-      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, location_);
+      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, location_);
     }
     if (!getModuleIdBytes().isEmpty()) {
-      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, moduleId_);
+      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, moduleId_);
     }
     com.google.protobuf.GeneratedMessageV3
       .serializeStringMapTo(
         output,
         internalGetTracingInfo(),
         TracingInfoDefaultEntryHolder.defaultEntry,
-        5);
+        6);
     unknownFields.writeTo(output);
   }
 
@@ -403,11 +449,14 @@ private static final long serialVersionUID = 0L;
       size += com.google.protobuf.CodedOutputStream
         .computeBytesSize(2, content_);
     }
+    if (!getSystemIdBytes().isEmpty()) {
+      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, systemId_);
+    }
     if (!getLocationBytes().isEmpty()) {
-      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, location_);
+      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, location_);
     }
     if (!getModuleIdBytes().isEmpty()) {
-      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, moduleId_);
+      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(5, moduleId_);
     }
     for (java.util.Map.Entry<String, String> entry
          : internalGetTracingInfo().getMap().entrySet()) {
@@ -417,7 +466,7 @@ private static final long serialVersionUID = 0L;
           .setValue(entry.getValue())
           .build();
       size += com.google.protobuf.CodedOutputStream
-          .computeMessageSize(5, tracingInfo__);
+          .computeMessageSize(6, tracingInfo__);
     }
     size += unknownFields.getSerializedSize();
     memoizedSize = size;
@@ -438,6 +487,8 @@ private static final long serialVersionUID = 0L;
         .equals(other.getMessageId())) return false;
     if (!getContent()
         .equals(other.getContent())) return false;
+    if (!getSystemId()
+        .equals(other.getSystemId())) return false;
     if (!getLocation()
         .equals(other.getLocation())) return false;
     if (!getModuleId()
@@ -459,6 +510,8 @@ private static final long serialVersionUID = 0L;
     hash = (53 * hash) + getMessageId().hashCode();
     hash = (37 * hash) + CONTENT_FIELD_NUMBER;
     hash = (53 * hash) + getContent().hashCode();
+    hash = (37 * hash) + SYSTEM_ID_FIELD_NUMBER;
+    hash = (53 * hash) + getSystemId().hashCode();
     hash = (37 * hash) + LOCATION_FIELD_NUMBER;
     hash = (53 * hash) + getLocation().hashCode();
     hash = (37 * hash) + MODULE_ID_FIELD_NUMBER;
@@ -578,7 +631,7 @@ private static final long serialVersionUID = 0L;
     protected com.google.protobuf.MapField internalGetMapField(
         int number) {
       switch (number) {
-        case 5:
+        case 6:
           return internalGetTracingInfo();
         default:
           throw new RuntimeException(
@@ -589,7 +642,7 @@ private static final long serialVersionUID = 0L;
     protected com.google.protobuf.MapField internalGetMutableMapField(
         int number) {
       switch (number) {
-        case 5:
+        case 6:
           return internalGetMutableTracingInfo();
         default:
           throw new RuntimeException(
@@ -626,6 +679,8 @@ private static final long serialVersionUID = 0L;
 
       content_ = com.google.protobuf.ByteString.EMPTY;
 
+      systemId_ = "";
+
       location_ = "";
 
       moduleId_ = "";
@@ -660,6 +715,7 @@ private static final long serialVersionUID = 0L;
       int from_bitField0_ = bitField0_;
       result.messageId_ = messageId_;
       result.content_ = content_;
+      result.systemId_ = systemId_;
       result.location_ = location_;
       result.moduleId_ = moduleId_;
       result.tracingInfo_ = internalGetTracingInfo();
@@ -719,6 +775,10 @@ private static final long serialVersionUID = 0L;
       if (other.getContent() != com.google.protobuf.ByteString.EMPTY) {
         setContent(other.getContent());
       }
+      if (!other.getSystemId().isEmpty()) {
+        systemId_ = other.systemId_;
+        onChanged();
+      }
       if (!other.getLocation().isEmpty()) {
         location_ = other.location_;
         onChanged();
@@ -868,9 +928,85 @@ private static final long serialVersionUID = 0L;
       return this;
     }
 
+    private Object systemId_ = "";
+    /**
+     * <code>string system_id = 3;</code>
+     * @return The systemId.
+     */
+    public String getSystemId() {
+      Object ref = systemId_;
+      if (!(ref instanceof String)) {
+        com.google.protobuf.ByteString bs =
+            (com.google.protobuf.ByteString) ref;
+        String s = bs.toStringUtf8();
+        systemId_ = s;
+        return s;
+      } else {
+        return (String) ref;
+      }
+    }
+    /**
+     * <code>string system_id = 3;</code>
+     * @return The bytes for systemId.
+     */
+    public com.google.protobuf.ByteString
+        getSystemIdBytes() {
+      Object ref = systemId_;
+      if (ref instanceof String) {
+        com.google.protobuf.ByteString b = 
+            com.google.protobuf.ByteString.copyFromUtf8(
+                (String) ref);
+        systemId_ = b;
+        return b;
+      } else {
+        return (com.google.protobuf.ByteString) ref;
+      }
+    }
+    /**
+     * <code>string system_id = 3;</code>
+     * @param value The systemId to set.
+     * @return This builder for chaining.
+     */
+    public Builder setSystemId(
+        String value) {
+      if (value == null) {
+    throw new NullPointerException();
+  }
+  
+      systemId_ = value;
+      onChanged();
+      return this;
+    }
+    /**
+     * <code>string system_id = 3;</code>
+     * @return This builder for chaining.
+     */
+    public Builder clearSystemId() {
+      
+      systemId_ = getDefaultInstance().getSystemId();
+      onChanged();
+      return this;
+    }
+    /**
+     * <code>string system_id = 3;</code>
+     * @param value The bytes for systemId to set.
+     * @return This builder for chaining.
+     */
+    public Builder setSystemIdBytes(
+        com.google.protobuf.ByteString value) {
+      if (value == null) {
+    throw new NullPointerException();
+  }
+  checkByteStringIsUtf8(value);
+      
+      systemId_ = value;
+      onChanged();
+      return this;
+    }
+
     private Object location_ = "";
     /**
-     * <code>string location = 3;</code>
+     * <code>string location = 4;</code>
      * @return The location.
      */
     public String getLocation() {
@@ -886,7 +1022,7 @@ private static final long serialVersionUID = 0L;
       }
     }
     /**
-     * <code>string location = 3;</code>
+     * <code>string location = 4;</code>
      * @return The bytes for location.
      */
     public com.google.protobuf.ByteString
@@ -903,7 +1039,7 @@ private static final long serialVersionUID = 0L;
       }
     }
     /**
-     * <code>string location = 3;</code>
+     * <code>string location = 4;</code>
      * @param value The location to set.
      * @return This builder for chaining.
      */
@@ -918,7 +1054,7 @@ private static final long serialVersionUID = 0L;
       return this;
     }
     /**
-     * <code>string location = 3;</code>
+     * <code>string location = 4;</code>
      * @return This builder for chaining.
      */
     public Builder clearLocation() {
@@ -928,7 +1064,7 @@ private static final long serialVersionUID = 0L;
       return this;
     }
     /**
-     * <code>string location = 3;</code>
+     * <code>string location = 4;</code>
      * @param value The bytes for location to set.
      * @return This builder for chaining.
      */
@@ -946,7 +1082,7 @@ private static final long serialVersionUID = 0L;
 
     private Object moduleId_ = "";
     /**
-     * <code>string module_id = 4;</code>
+     * <code>string module_id = 5;</code>
      * @return The moduleId.
      */
     public String getModuleId() {
@@ -962,7 +1098,7 @@ private static final long serialVersionUID = 0L;
       }
     }
     /**
-     * <code>string module_id = 4;</code>
+     * <code>string module_id = 5;</code>
      * @return The bytes for moduleId.
      */
     public com.google.protobuf.ByteString
@@ -979,7 +1115,7 @@ private static final long serialVersionUID = 0L;
       }
     }
     /**
-     * <code>string module_id = 4;</code>
+     * <code>string module_id = 5;</code>
      * @param value The moduleId to set.
      * @return This builder for chaining.
      */
@@ -994,7 +1130,7 @@ private static final long serialVersionUID = 0L;
       return this;
     }
     /**
-     * <code>string module_id = 4;</code>
+     * <code>string module_id = 5;</code>
      * @return This builder for chaining.
      */
     public Builder clearModuleId() {
@@ -1004,7 +1140,7 @@ private static final long serialVersionUID = 0L;
       return this;
     }
     /**
-     * <code>string module_id = 4;</code>
+     * <code>string module_id = 5;</code>
      * @param value The bytes for moduleId to set.
      * @return This builder for chaining.
      */
@@ -1047,7 +1183,7 @@ private static final long serialVersionUID = 0L;
       return internalGetTracingInfo().getMap().size();
     }
     /**
-     * <code>map&lt;string, string&gt; tracing_info = 5;</code>
+     * <code>map&lt;string, string&gt; tracing_info = 6;</code>
      */
 
     public boolean containsTracingInfo(
@@ -1063,14 +1199,14 @@ private static final long serialVersionUID = 0L;
       return getTracingInfoMap();
     }
     /**
-     * <code>map&lt;string, string&gt; tracing_info = 5;</code>
+     * <code>map&lt;string, string&gt; tracing_info = 6;</code>
      */
 
     public java.util.Map<String, String> getTracingInfoMap() {
       return internalGetTracingInfo().getMap();
     }
     /**
-     * <code>map&lt;string, string&gt; tracing_info = 5;</code>
+     * <code>map&lt;string, string&gt; tracing_info = 6;</code>
      */
 
     public String getTracingInfoOrDefault(
@@ -1082,7 +1218,7 @@ private static final long serialVersionUID = 0L;
       return map.containsKey(key) ? map.get(key) : defaultValue;
     }
     /**
-     * <code>map&lt;string, string&gt; tracing_info = 5;</code>
+     * <code>map&lt;string, string&gt; tracing_info = 6;</code>
      */
 
     public String getTracingInfoOrThrow(
@@ -1102,7 +1238,7 @@ private static final long serialVersionUID = 0L;
       return this;
     }
     /**
-     * <code>map&lt;string, string&gt; tracing_info = 5;</code>
+     * <code>map&lt;string, string&gt; tracing_info = 6;</code>
      */
 
     public Builder removeTracingInfo(
@@ -1121,7 +1257,7 @@ private static final long serialVersionUID = 0L;
       return internalGetMutableTracingInfo().getMutableMap();
     }
     /**
-     * <code>map&lt;string, string&gt; tracing_info = 5;</code>
+     * <code>map&lt;string, string&gt; tracing_info = 6;</code>
      */
     public Builder putTracingInfo(
         String key,
@@ -1133,7 +1269,7 @@ private static final long serialVersionUID = 0L;
       return this;
     }
     /**
-     * <code>map&lt;string, string&gt; tracing_info = 5;</code>
+     * <code>map&lt;string, string&gt; tracing_info = 6;</code>
      */
 
     public Builder putAllTracingInfo(
diff --git a/src/main/java/org/opennms/core/ipc/grpc/common/SinkMessageOrBuilder.java b/src/main/java/org/opennms/core/ipc/grpc/common/SinkMessageOrBuilder.java
index e660d22..e85888d 100644
--- a/src/main/java/org/opennms/core/ipc/grpc/common/SinkMessageOrBuilder.java
+++ b/src/main/java/org/opennms/core/ipc/grpc/common/SinkMessageOrBuilder.java
@@ -54,35 +54,47 @@ public interface SinkMessageOrBuilder extends
   com.google.protobuf.ByteString getContent();
 
   /**
-   * <code>string location = 3;</code>
+   * <code>string system_id = 3;</code>
+   * @return The systemId.
+   */
+  String getSystemId();
+  /**
+   * <code>string system_id = 3;</code>
+   * @return The bytes for systemId.
+   */
+  com.google.protobuf.ByteString
+      getSystemIdBytes();
+
+  /**
+   * <code>string location = 4;</code>
    * @return The location.
    */
   String getLocation();
   /**
-   * <code>string location = 3;</code>
+   * <code>string location = 4;</code>
    * @return The bytes for location.
    */
   com.google.protobuf.ByteString
       getLocationBytes();
 
   /**
-   * <code>string module_id = 4;</code>
+   * <code>string module_id = 5;</code>
    * @return The moduleId.
    */
   String getModuleId();
   /**
-   * <code>string module_id = 4;</code>
+   * <code>string module_id = 5;</code>
    * @return The bytes for moduleId.
    */
   com.google.protobuf.ByteString
       getModuleIdBytes();
 
   /**
-   * <code>map&lt;string, string&gt; tracing_info = 5;</code>
+   * <code>map&lt;string, string&gt; tracing_info = 6;</code>
    */
   int getTracingInfoCount();
   /**
-   * <code>map&lt;string, string&gt; tracing_info = 5;</code>
+   * <code>map&lt;string, string&gt; tracing_info = 6;</code>
    */
   boolean containsTracingInfo(
           String key);
@@ -93,19 +105,19 @@ public interface SinkMessageOrBuilder extends
   java.util.Map<String, String>
   getTracingInfo();
   /**
-   * <code>map&lt;string, string&gt; tracing_info = 5;</code>
+   * <code>map&lt;string, string&gt; tracing_info = 6;</code>
    */
   java.util.Map<String, String>
   getTracingInfoMap();
   /**
-   * <code>map&lt;string, string&gt; tracing_info = 5;</code>
+   * <code>map&lt;string, string&gt; tracing_info = 6;</code>
    */
 
   String getTracingInfoOrDefault(
           String key,
           String defaultValue);
   /**
-   * <code>map&lt;string, string&gt; tracing_info = 5;</code>
+   * <code>map&lt;string, string&gt; tracing_info = 6;</code>
    */
 
   String getTracingInfoOrThrow(
diff --git a/src/main/java/org/opennms/core/ipc/grpc/server/GrpcIpcServer.java b/src/main/java/org/opennms/core/ipc/grpc/server/GrpcIpcServer.java
index 82af792..1faa501 100644
--- a/src/main/java/org/opennms/core/ipc/grpc/server/GrpcIpcServer.java
+++ b/src/main/java/org/opennms/core/ipc/grpc/server/GrpcIpcServer.java
@@ -36,6 +36,7 @@ import static org.opennms.core.ipc.grpc.server.GrpcServerConstants.GRPC_SERVER_P
 import static org.opennms.core.ipc.grpc.server.GrpcServerConstants.KAFKA_CONSUMER_SYS_PROP_PREFIX;
 import static org.opennms.core.ipc.grpc.server.GrpcServerConstants.KAFKA_PRODUCER_SYS_PROP_PREFIX;
 import static org.opennms.core.ipc.grpc.server.GrpcServerConstants.MAX_BUFFER_SIZE_CONFIGURED;
+import static org.opennms.core.ipc.grpc.server.GrpcServerConstants.MINION_HEADERS_MODULE;
 import static org.opennms.core.ipc.grpc.server.GrpcServerConstants.PRIVATE_KEY_FILE_PATH;
 import static org.opennms.core.ipc.grpc.server.GrpcServerConstants.SERVER_CERTIFICATE_FILE_PATH;
 import static org.opennms.core.ipc.grpc.server.GrpcServerConstants.TLS_ENABLED;
@@ -382,8 +383,8 @@ public class GrpcIpcServer {
 
 
     private boolean isHeaders(RpcResponseProto rpcMessage) {
-        return !Strings.isNullOrEmpty(rpcMessage.getSystemId()) &&
-                rpcMessage.getRpcId().equals(rpcMessage.getSystemId());
+        return !Strings.isNullOrEmpty(rpcMessage.getModuleId()) &&
+                rpcMessage.getModuleId().equals(MINION_HEADERS_MODULE);
     }
 
 
diff --git a/src/main/java/org/opennms/core/ipc/grpc/server/GrpcServerConstants.java b/src/main/java/org/opennms/core/ipc/grpc/server/GrpcServerConstants.java
index cec9e10..d19cccd 100644
--- a/src/main/java/org/opennms/core/ipc/grpc/server/GrpcServerConstants.java
+++ b/src/main/java/org/opennms/core/ipc/grpc/server/GrpcServerConstants.java
@@ -33,6 +33,7 @@ import java.util.Properties;
 
 public interface GrpcServerConstants {
 
+    String MINION_HEADERS_MODULE = "MINION_HEADERS";
     String TOPIC_NAME_AT_LOCATION = "%s.%s.%s";
     String TOPIC_NAME_WITHOUT_LOCATION = "%s.%s";
     String SINK_TOPIC_NAME_WITHOUT_LOCATION = "%s.%s.%s";
