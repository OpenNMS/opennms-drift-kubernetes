# @author Alejandro Galue <agalue@opennms.org>
#
# GraphQL API with a development UI for PostgreSQL databases.
#
# Reference:
# - https://github.com/hasura/graphql-engine/tree/master/install-manifests/kubernetes
# - https://github.com/hasura/hasura-k8s-stack
#
# TODO:
# - What about other env vars ? https://docs.hasura.io/1.0/graphql/manual/deployment/graphql-engine-flags/reference.html
# - Where the GraphQL schema is stored ? Looks like within PostgreSQL itself.
# - How to pass the GraphQL schema to the container ? Find a way to export/import it.

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: hasura-config
  namespace: opennms
  labels:
    app: hasura
data:
  hasura.sql: |+
    CREATE USER hasurauser WITH PASSWORD 'hasurauser';
    CREATE EXTENSION IF NOT EXISTS pgcrypto;
    CREATE SCHEMA IF NOT EXISTS hdb_catalog;
    CREATE SCHEMA IF NOT EXISTS hdb_views;
    ALTER SCHEMA hdb_catalog OWNER TO hasurauser;
    ALTER SCHEMA hdb_views OWNER TO hasurauser;
    GRANT SELECT ON ALL TABLES IN SCHEMA information_schema TO hasurauser;
    GRANT SELECT ON ALL TABLES IN SCHEMA pg_catalog TO hasurauser;
    GRANT ALL ON ALL TABLES IN SCHEMA public TO hasurauser;
    GRANT ALL ON ALL SEQUENCES IN SCHEMA public TO hasurauser;

---
apiVersion: v1
kind: Service
metadata:
  name: hasura
  namespace: opennms
  labels:
    app: hasura
spec:
  ports:
  - port: 8080
    name: http
  selector:
    app: hasura

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hasura
  namespace: opennms
  labels:
    app: hasura
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hasura
  template:
    metadata:
      labels:
        app: hasura
    spec:
      initContainers:
      # Make sure that the OpenNMS database exist
      - name: dependencies
        image: waisbrot/wait
        imagePullPolicy: IfNotPresent
        env:
        - name: TARGETS
          value: opennms-core.opennms.svc.cluster.local:8980
        - name: TIMEOUT
          value: '600'
      # Patch the database for Hasura
      - name: init-config
        image: postgres:13
        imagePullPolicy: IfNotPresent
        command:
        - sh
        - -c
        - exec psql -f /hasura.sql
        env:
        - name: TZ
          valueFrom:
            configMapKeyRef:
              key: TIMEZONE
              name: common-settings
        - name: PGHOST
          value: postgresql.opennms.svc.cluster.local
        - name: PGPORT
          value: '5432'
        - name: PGUSER
          value: postgres
        - name: PGPASSWORD
          valueFrom:
            secretKeyRef:
              key: POSTGRES_PASSWORD
              name: onms-passwords
        volumeMounts:
        - name: hasura-config
          mountPath: /hasura.sql
          subPath: hasura.sql
      containers:
      - name: hasura
        image: hasura/graphql-engine:v1.3.2
        imagePullPolicy: IfNotPresent
        env:
        - name: PG_PASSWD
          valueFrom:
            secretKeyRef:
              key: POSTGRES_PASSWORD
              name: onms-passwords
        - name: HASURA_GRAPHQL_DATABASE_URL
          value: postgres://postgres:$(PG_PASSWD)@postgresql.opennms.svc.cluster.local:5432/opennms
        - name: HASURA_GRAPHQL_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              key: HASURA_GRAPHQL_ACCESS_KEY
              name: onms-passwords
        - name: HASURA_GRAPHQL_ENABLE_CONSOLE
          value: 'true'
        ports:
        - containerPort: 8080
          name: http
        resources:
          limits:
            memory: 256Mi
            cpu: 500m
          requests:
            memory: 128Mi
            cpu: 50m
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 30
          periodSeconds: 60
      volumes:
      - name: hasura-config
        configMap:
          name: hasura-config
